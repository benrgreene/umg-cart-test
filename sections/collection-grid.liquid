<div class="ccontain"
     x-data="{ collection: $store.collectionInfo }">

  <div class="my-6 grid grid-cols-2 lg:flex gap-x-8 lg:gap-x-0 justify-between items-center">
    <p class="hidden lg:block text-small"
       x-text="`${collection.productsCount} Products`">
    </p>
    <div class="lg:hidden">
      <button class="focuser flex items-center justify-between w-full border rounded-md py-2 px-5"
              @click="collection.setFiltersOpen(true)">
        Filters
        <svg xmlns="http://www.w3.org/2000/svg" height="1rem" viewBox="0 0 512 512"><path d="M0 416c0 17.7 14.3 32 32 32l54.7 0c12.3 28.3 40.5 48 73.3 48s61-19.7 73.3-48L480 448c17.7 0 32-14.3 32-32s-14.3-32-32-32l-246.7 0c-12.3-28.3-40.5-48-73.3-48s-61 19.7-73.3 48L32 384c-17.7 0-32 14.3-32 32zm128 0a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zM320 256a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm32-80c-32.8 0-61 19.7-73.3 48L32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l246.7 0c12.3 28.3 40.5 48 73.3 48s61-19.7 73.3-48l54.7 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-54.7 0c-12.3-28.3-40.5-48-73.3-48zM192 128a32 32 0 1 1 0-64 32 32 0 1 1 0 64zm73.3-64C253 35.7 224.8 16 192 16s-61 19.7-73.3 48L32 64C14.3 64 0 78.3 0 96s14.3 32 32 32l86.7 0c12.3 28.3 40.5 48 73.3 48s61-19.7 73.3-48L480 128c17.7 0 32-14.3 32-32s-14.3-32-32-32L265.3 64z" fill="currentColor"/></svg>
      </button>
    </div>
    <div class="select-wrap w-full lg:w-auto">
      <select data-sort-by 
              @change="$store.collectionInfo.setPageOn(1); window.performProductFetch({ collectionID: '{{ collection.handle }}' })"
              class="w-full min-w-0">
        <option value="manual">Default</option>
        <option value="best-selling" selected>Best Selling</option>
        <option value="price-descending">Price (High to Low)</option>
        <option value="price-ascending">Price (Low to High)</option>
      </select>
    </div>
  </div>

  <p class="mb-8 lg:hidden text-center text-small"
     x-text="`${collection.productsCount} Products`">
  </p>

  <div class="grid gap-x-16 lg:grid-cols-page">
    <button @click="collection.setFiltersOpen(false)"
            class="lg:hidden fixed left-0 top-0 bottom-0 w-screen bg-black opacity-50 z-10"
            x-show="collection.filtersOpen"
            aria-label="close filters menu"></button>
    <div class="collection-filters py-4 px-8 lg:py-0 lg:px-0 overflow-auto transition-all" 
         :class="collection.filtersOpen ? 'open' : ''"
         data-collection-filters-container>
      <div class="border-b pb-4 flex justify-between items-center lg:hidden text-large ">
        Filters
        <button aria-label="close filters menu"
                @click="collection.setFiltersOpen(false)">
          <svg xmlns="http://www.w3.org/2000/svg" height="1rem" viewBox="0 0 384 512"><path d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"/></svg>
        </button>
      </div>
      <template x-if="collection.activeFilters.length > 0">
        <div class="mt-4 lg:mt-0 pb-6 border-b border-grey-5">
          <p class="pb-4 lg:text-large text-secondary font-bold">
            Active <span class="hidden lg:inline">Filters</span>
          </p>
          <template x-for="filter in collection.activeFilters">
            <div>
              <button @click="window.clearFilter(filter)"
                      class="mt-2 w-full flex">
                <span x-show="!filter.split('=')[0].includes('availability')"
                      x-text="filter.split('=')[1]"></span>
                <span x-show="filter.split('=')[0].includes('availability')"
                      x-text="filter.split('=')[1] === '1' ? 'Available' : 'Out of Stock'"></span>
                <span class="ml-auto">
                  <svg xmlns="http://www.w3.org/2000/svg" height="1rem" viewBox="0 0 384 512"><path d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"/></svg>
                </span>
              </button>
            </div>
          </template>
          <button @click="window.clearAllFilters()"
                  class="mt-2 text-secondary hover:text-secondary-active underline">
            Clear All
          </button>
        </div>
      </template>
      <template x-for="(filterObject, filterIndex) in collection.filters.options">
        <div :class="filterIndex > 0 ? 'border-t border-grey-5' : ''">
          <template x-if="filterObject.filterType === 'list'">
            <filter-list x-data="{ filter: filterObject, activeFilters: collection.activeFilters }"></filter-list>
          </template>
        </div>
      </template>
    </div>

    <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-2 xl:grid-cols-3 gap-x-8 gap-y-6 items-start">
      <template x-for="(product, index) in collection.products" :key="`product-${product.handle}`">
        <product-tile x-data='product'></product-tile>
      </template>

      <div class="mt-10 col-start-1 col-span-2 md:col-span-3 lg:col-span-2 xl:col-span-3 flex items-center justify-center">
        <button class="button button--primary"
                @click="window.performProductFetch({ collectionID: '{{ collection.handle }}' })"
                :disabled="Alpine.store('collectionInfo') && Alpine.store('collectionInfo').products.length >= Alpine.store('collectionInfo').productsCount">
          Load More
        </button>
      </div>
    </div>
  </div>
</div>

{%- render 'spacer',
    _mobile_space: section.settings.bottom_margin_mobile,
    _desktop_space: section.settings.bottom_margin_desktop -%}

{% schema %}
  {
    "name": "Collection Grid",
    "tag": "section",
    "settings": [
      {
        "type": "header",
        "content": "Section Spacing"
      },
      {
        "id": "bottom_margin_mobile",
        "label": "Bottom Margin - Mobile",
        "type": "range",
        "min": 0,
        "max": 200,
        "step": 2,
        "default": 40
      },
      {
        "id": "bottom_margin_desktop",
        "label": "Bottom Margin - Desktop",
        "type": "range",
        "min": 0,
        "max": 200,
        "step": 2,
        "default": 70
      }
    ],
    "templates": [
      "collection",
      "search"
    ],
    "presets": [
      {
        "name": "Collection Grid",
        "category": "Collection"
      }
    ]
  }
{% endschema %}